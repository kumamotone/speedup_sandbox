name: debug-deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-ios-debug:
    runs-on: macOS-11
    if: ${{ !contains(github.event.pull_request.title, '[Skip CI]') }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
    - run: flutter pub get
    - name: Import Provisioning Profile
      run: |
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        echo -n ${{ secrets.PROVISIONING_PROFILE }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/speedupadhoc0208.mobileprovision
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}
    - name: Run iOS
      run: flutter build ipa --export-options-plist=ios/ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}
    - name: Upload to deploygate
      run: |
        curl \
          -H "Authorization: token ${{secrets.DEPLOY_GATE_API_KEY}}" \
          -F "file=@build/ios/ipa/speedup-sandbox.ipa" \
          -F "message=${{github.event.pull_request.title}}" \
          -v "https://deploygate.com/api/users/${{secrets.DEPLOY_GATE_USER_NAME}}/apps"
  build-android-debug:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.title, '[Skip CI]') }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        cache: true
    - run: flutter pub get
    - run: flutter build apk --debug --target lib/main.dart --no-sound-null-safety
    # - run: cd android && ./gradlew assembleDebug --profile # output to build/app/outputs/flutter-apk/app-debug.apk
    - name: Upload to deploygate
      run: |
        curl \
          -H "Authorization: token ${{secrets.DEPLOY_GATE_API_KEY}}" \
          -F "file=@build/app/outputs/flutter-apk/app-debug.apk" \
          -F "message=${{github.event.pull_request.title}}" \
          -v "https://deploygate.com/api/users/${{secrets.DEPLOY_GATE_USER_NAME}}/apps"

